<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="Scripts/jquery-2.1.3.js"></script>
    <script src="Scripts/jquery.signalR-2.2.0.js"></script>

    <script src="Scripts/rx.js"></script>
    <script src="Scripts/rx.async.js"></script>
    <script src="Scripts/rx.binding.js"></script>
    <script src="Scripts/rx.coincidence.js"></script>

    <script src="Scripts/relmah/relmah.js"></script>

    <script>
        $(function () {

            var r = relmah("http://localhost:@System.Configuration.ConfigurationManager.AppSettings["port"]/signalr"),
                $apps = $('#apps'),
                $groups = $('#groups'),
                $recaps = $('#recaps');

            //Enable the following line to use the basic client side token for authentication (for test purposes)
            var userGetter = function () { return $('#user').val(); };

            //Enable the following line to use Windows authentication (for test purposes)
            //var userGetter = null;

            var logout = function () {
                $('#logout').hide();
                $('#login').show();
                $('#display').hide();
                $('#user').attr('disabled', null);

                r.stop();
            };
            var login = function () {
                $('#login').hide();
                $('#logout').show();
                $('#display').show();
                $('#user').attr('disabled', 'disabled');

                var opts = userGetter && { user: userGetter() };

                r.start(opts).done(function () {
                    r.disconnected(function () {
                        $('#groups').empty();
                        $('#recaps').empty();
                        $('#apps').empty();

                        logout();
                    });
                });
            };

            r.starting(function() {

                //streams

                var errors     = r.getErrors(),
                    apps       = r.getApplications(),
                    errorTypes = r.getErrorTypes(),
                    recaps     = r.getRecaps(),
                    states     = r.getStates();

                //subscriptions

                //app deltas

                apps
                    .filter(function (a) { return a.Action === 'added'; })
                    .subscribe(function (app) {
                        var id = app.Source.SourceId,
                            desc = app.Source.Description;
                        if (!$('#app-' + id).length)
                            $('<li/>')
                                .attr('id', 'app-' + id)
                                .append($('<p/>').text(desc))
                                .append($('<ul/>').attr('id', 'errors-' + id))
                                .appendTo($apps);
                        $('#app-' + id).css({ 'background-color': 'yellow' });
                    });

                apps
                    .filter(function (a) { return a.Action === 'removed'; })
                    .subscribe(function (app) {
                        $('#app-' + app.Source.SourceId).css({ 'background-color': 'grey' });
                    });

                //errors

                errors
                    .subscribe(function (e) {
                        $('<li/>')
                            .append($('<span/>').text(e.Error.Message))
                            .prependTo($('#errors-' + e.SourceId));
                    });

                //error types

                errorTypes
                    .subscribe(function (et) {
                        var g = $('<li/>');
                        $groups.append(g);

                        et
                            .scan(0, function (a) { return a + 1; })
                            .subscribe(function(e) {
                                g.text(et.key.SourceId + '-' + et.key.Type + ': ' + e);
                            });
                    });

                //recaps

                recaps
                    .subscribe(function (et) {
                        var g = $('<li/>');
                        $recaps.append(g);

                        et
                            .subscribe(function(e) {
                                g.text(et.key.SourceId + '-' + et.key.Type + ': ' + e.Measure);
                            });
                    });

                //states

                states
                    .subscribe(function (s) {
                        $("#conn-state").text(s);
                    });

                states
                    .filter(function(s){ return s === 'disconnected'; })
                    .subscribe(function () {
                        logout();
                    });

            });

            userGetter && $('#user').show();

            //startup

            $('#login').click(login);
            $('#logout').click(logout);

        });
    </script>
</head>
<body>
    <div>
        <button id="login">Login</button>
        <button id="logout" style="display: none">Logout</button>
        <input  type="text" id="user" style="display: none"/>
        <div    id="conn-state">Ready</div>
    </div>
    <div id="display" style="display: none">
        <div>
            Error groups:
            <ul id="groups"></ul>
        </div>
        <div>
            Error recaps:
            <ul id="recaps"></ul>
        </div>
        <div>
            Errors by source:
            <ul id="apps"></ul>
        </div>
    </div>
</body>
</html>
