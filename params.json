{"name":"Relmah","tagline":"Reactive ELMAH","body":"RElmah - Reactive ELMAH\r\n======\r\n\r\nIf you already used [ElmahR] in the past, you already know what **RElmah** is about. We want to monitor applications and receive real time notifications about unhandled exceptions. But the way things are done behind the scenes are totally redesigned to offer a true **reactive** experience to the developer. Quickly:\r\n\r\n- we have a clean separation between server and client portions\r\n- we have true and independent client libraries for both JavaScript and .NET\r\n- [Rx] is at the core on both the server side the clients side libraries\r\n- Errors, applications, basically anything that can go to a client will be managed as a push stream of information\r\n\r\nDo you want a sneak preview? What about being able to do something like this in Linqpad?\r\n\r\n```c#\r\nvar c = new Connection(\"http://localhost:50360/\");\r\nvar q = \r\n\tfrom error in c.Errors\r\n\twhere error.Detail.Message.StartsWith(\"B\")\r\n\tselect error.Detail;\r\n\t\r\nq.DumpLive();\r\n```\r\nYou get the idea :)\r\n\r\nCurrent version is 0.2, which means some foundations are there, but it's not really ready to be used yet. You might want to have a look and see if you like what's happening, and maybe contribute with ideas or coding.\r\n\r\n\r\n\r\n[ElmahR]:http://elmahr.apphb.com/\r\n[Rx]:http://msdn.microsoft.com/en-us/data/gg577609.aspx","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}